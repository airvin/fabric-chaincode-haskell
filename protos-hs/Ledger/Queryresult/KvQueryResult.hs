{-# LANGUAGE DeriveGeneric     #-}
{-# LANGUAGE DeriveAnyClass    #-}
{-# LANGUAGE DataKinds         #-}
{-# LANGUAGE GADTs             #-}
{-# LANGUAGE TypeApplications  #-}
{-# LANGUAGE OverloadedStrings #-}
{-# OPTIONS_GHC -fno-warn-unused-imports #-}
{-# OPTIONS_GHC -fno-warn-name-shadowing #-}
{-# OPTIONS_GHC -fno-warn-unused-matches #-}

-- | Generated by Haskell protocol buffer compiler. DO NOT EDIT!

module Ledger.Queryresult.KvQueryResult where
import qualified Prelude as Hs
import qualified Proto3.Suite.Class as HsProtobuf
import qualified Proto3.Suite.DotProto as HsProtobuf
import qualified Proto3.Suite.JSONPB as HsJSONPB
import Proto3.Suite.JSONPB ((.=), (.:))
import qualified Proto3.Suite.Types as HsProtobuf
import qualified Proto3.Wire as HsProtobuf
import qualified Control.Applicative as Hs
import Control.Applicative ((<*>), (<|>), (<$>))
import qualified Control.DeepSeq as Hs
import qualified Control.Monad as Hs
import qualified Data.ByteString as Hs
import qualified Data.Coerce as Hs
import qualified Data.Int as Hs (Int16, Int32, Int64)
import qualified Data.List.NonEmpty as Hs (NonEmpty(..))
import qualified Data.Map as Hs (Map, mapKeysMonotonic)
import qualified Data.Proxy as Proxy
import qualified Data.String as Hs (fromString)
import qualified Data.Text.Lazy as Hs (Text)
import qualified Data.Vector as Hs (Vector)
import qualified Data.Word as Hs (Word16, Word32, Word64)
import qualified GHC.Enum as Hs
import qualified GHC.Generics as Hs
import qualified Unsafe.Coerce as Hs
import qualified Google.Protobuf.Timestamp
 
data KV = KV{kvNamespace :: Hs.Text, kvKey :: Hs.Text,
             kvValue :: Hs.ByteString}
        deriving (Hs.Show, Hs.Eq, Hs.Ord, Hs.Generic, Hs.NFData)
 
instance HsProtobuf.Named KV where
        nameOf _ = (Hs.fromString "KV")
 
instance HsProtobuf.HasDefault KV
 
instance HsProtobuf.Message KV where
        encodeMessage _
          KV{kvNamespace = kvNamespace, kvKey = kvKey, kvValue = kvValue}
          = (Hs.mconcat
               [(HsProtobuf.encodeMessageField (HsProtobuf.FieldNumber 1)
                   kvNamespace),
                (HsProtobuf.encodeMessageField (HsProtobuf.FieldNumber 2) kvKey),
                (HsProtobuf.encodeMessageField (HsProtobuf.FieldNumber 3)
                   kvValue)])
        decodeMessage _
          = (Hs.pure KV) <*>
              (HsProtobuf.at HsProtobuf.decodeMessageField
                 (HsProtobuf.FieldNumber 1))
              <*>
              (HsProtobuf.at HsProtobuf.decodeMessageField
                 (HsProtobuf.FieldNumber 2))
              <*>
              (HsProtobuf.at HsProtobuf.decodeMessageField
                 (HsProtobuf.FieldNumber 3))
        dotProto _
          = [(HsProtobuf.DotProtoField (HsProtobuf.FieldNumber 1)
                (HsProtobuf.Prim HsProtobuf.String)
                (HsProtobuf.Single "namespace")
                []
                ""),
             (HsProtobuf.DotProtoField (HsProtobuf.FieldNumber 2)
                (HsProtobuf.Prim HsProtobuf.String)
                (HsProtobuf.Single "key")
                []
                ""),
             (HsProtobuf.DotProtoField (HsProtobuf.FieldNumber 3)
                (HsProtobuf.Prim HsProtobuf.Bytes)
                (HsProtobuf.Single "value")
                []
                "")]
 
instance HsJSONPB.ToJSONPB KV where
        toJSONPB (KV f1 f2 f3)
          = (HsJSONPB.object ["namespace" .= f1, "key" .= f2, "value" .= f3])
        toEncodingPB (KV f1 f2 f3)
          = (HsJSONPB.pairs ["namespace" .= f1, "key" .= f2, "value" .= f3])
 
instance HsJSONPB.FromJSONPB KV where
        parseJSONPB
          = (HsJSONPB.withObject "KV"
               (\ obj ->
                  (Hs.pure KV) <*> obj .: "namespace" <*> obj .: "key" <*>
                    obj .: "value"))
 
instance HsJSONPB.ToJSON KV where
        toJSON = HsJSONPB.toAesonValue
        toEncoding = HsJSONPB.toAesonEncoding
 
instance HsJSONPB.FromJSON KV where
        parseJSON = HsJSONPB.parseJSONPB
 
instance HsJSONPB.ToSchema KV where
        declareNamedSchema _
          = do let declare_namespace = HsJSONPB.declareSchemaRef
               kvNamespace <- declare_namespace Proxy.Proxy
               let declare_key = HsJSONPB.declareSchemaRef
               kvKey <- declare_key Proxy.Proxy
               let declare_value = HsJSONPB.declareSchemaRef
               kvValue <- declare_value Proxy.Proxy
               let _ = Hs.pure KV <*> HsJSONPB.asProxy declare_namespace <*>
                         HsJSONPB.asProxy declare_key
                         <*> HsJSONPB.asProxy declare_value
               Hs.return
                 (HsJSONPB.NamedSchema{HsJSONPB._namedSchemaName = Hs.Just "KV",
                                       HsJSONPB._namedSchemaSchema =
                                         Hs.mempty{HsJSONPB._schemaParamSchema =
                                                     Hs.mempty{HsJSONPB._paramSchemaType =
                                                                 Hs.Just HsJSONPB.SwaggerObject},
                                                   HsJSONPB._schemaProperties =
                                                     HsJSONPB.insOrdFromList
                                                       [("namespace", kvNamespace), ("key", kvKey),
                                                        ("value", kvValue)]}})
 
data KeyModification = KeyModification{keyModificationTxId ::
                                       Hs.Text,
                                       keyModificationValue :: Hs.ByteString,
                                       keyModificationTimestamp ::
                                       Hs.Maybe Google.Protobuf.Timestamp.Timestamp,
                                       keyModificationIsDelete :: Hs.Bool}
                     deriving (Hs.Show, Hs.Eq, Hs.Ord, Hs.Generic, Hs.NFData)
 
instance HsProtobuf.Named KeyModification where
        nameOf _ = (Hs.fromString "KeyModification")
 
instance HsProtobuf.HasDefault KeyModification
 
instance HsProtobuf.Message KeyModification where
        encodeMessage _
          KeyModification{keyModificationTxId = keyModificationTxId,
                          keyModificationValue = keyModificationValue,
                          keyModificationTimestamp = keyModificationTimestamp,
                          keyModificationIsDelete = keyModificationIsDelete}
          = (Hs.mconcat
               [(HsProtobuf.encodeMessageField (HsProtobuf.FieldNumber 1)
                   keyModificationTxId),
                (HsProtobuf.encodeMessageField (HsProtobuf.FieldNumber 2)
                   keyModificationValue),
                (HsProtobuf.encodeMessageField (HsProtobuf.FieldNumber 3)
                   (Hs.coerce @(Hs.Maybe Google.Protobuf.Timestamp.Timestamp)
                      @(HsProtobuf.Nested Google.Protobuf.Timestamp.Timestamp)
                      keyModificationTimestamp)),
                (HsProtobuf.encodeMessageField (HsProtobuf.FieldNumber 4)
                   keyModificationIsDelete)])
        decodeMessage _
          = (Hs.pure KeyModification) <*>
              (HsProtobuf.at HsProtobuf.decodeMessageField
                 (HsProtobuf.FieldNumber 1))
              <*>
              (HsProtobuf.at HsProtobuf.decodeMessageField
                 (HsProtobuf.FieldNumber 2))
              <*>
              (Hs.coerce
                 @(_ (HsProtobuf.Nested Google.Protobuf.Timestamp.Timestamp))
                 @(_ (Hs.Maybe Google.Protobuf.Timestamp.Timestamp))
                 (HsProtobuf.at HsProtobuf.decodeMessageField
                    (HsProtobuf.FieldNumber 3)))
              <*>
              (HsProtobuf.at HsProtobuf.decodeMessageField
                 (HsProtobuf.FieldNumber 4))
        dotProto _
          = [(HsProtobuf.DotProtoField (HsProtobuf.FieldNumber 1)
                (HsProtobuf.Prim HsProtobuf.String)
                (HsProtobuf.Single "tx_id")
                []
                ""),
             (HsProtobuf.DotProtoField (HsProtobuf.FieldNumber 2)
                (HsProtobuf.Prim HsProtobuf.Bytes)
                (HsProtobuf.Single "value")
                []
                ""),
             (HsProtobuf.DotProtoField (HsProtobuf.FieldNumber 3)
                (HsProtobuf.Prim
                   (HsProtobuf.Named
                      (HsProtobuf.Dots
                         (HsProtobuf.Path ("google" Hs.:| ["protobuf", "Timestamp"])))))
                (HsProtobuf.Single "timestamp")
                []
                ""),
             (HsProtobuf.DotProtoField (HsProtobuf.FieldNumber 4)
                (HsProtobuf.Prim HsProtobuf.Bool)
                (HsProtobuf.Single "is_delete")
                []
                "")]
 
instance HsJSONPB.ToJSONPB KeyModification where
        toJSONPB (KeyModification f1 f2 f3 f4)
          = (HsJSONPB.object
               ["tx_id" .= f1, "value" .= f2, "timestamp" .= f3,
                "is_delete" .= f4])
        toEncodingPB (KeyModification f1 f2 f3 f4)
          = (HsJSONPB.pairs
               ["tx_id" .= f1, "value" .= f2, "timestamp" .= f3,
                "is_delete" .= f4])
 
instance HsJSONPB.FromJSONPB KeyModification where
        parseJSONPB
          = (HsJSONPB.withObject "KeyModification"
               (\ obj ->
                  (Hs.pure KeyModification) <*> obj .: "tx_id" <*> obj .: "value" <*>
                    obj .: "timestamp"
                    <*> obj .: "is_delete"))
 
instance HsJSONPB.ToJSON KeyModification where
        toJSON = HsJSONPB.toAesonValue
        toEncoding = HsJSONPB.toAesonEncoding
 
instance HsJSONPB.FromJSON KeyModification where
        parseJSON = HsJSONPB.parseJSONPB
 
instance HsJSONPB.ToSchema KeyModification where
        declareNamedSchema _
          = do let declare_tx_id = HsJSONPB.declareSchemaRef
               keyModificationTxId <- declare_tx_id Proxy.Proxy
               let declare_value = HsJSONPB.declareSchemaRef
               keyModificationValue <- declare_value Proxy.Proxy
               let declare_timestamp = HsJSONPB.declareSchemaRef
               keyModificationTimestamp <- declare_timestamp Proxy.Proxy
               let declare_is_delete = HsJSONPB.declareSchemaRef
               keyModificationIsDelete <- declare_is_delete Proxy.Proxy
               let _ = Hs.pure KeyModification <*> HsJSONPB.asProxy declare_tx_id
                         <*> HsJSONPB.asProxy declare_value
                         <*> HsJSONPB.asProxy declare_timestamp
                         <*> HsJSONPB.asProxy declare_is_delete
               Hs.return
                 (HsJSONPB.NamedSchema{HsJSONPB._namedSchemaName =
                                         Hs.Just "KeyModification",
                                       HsJSONPB._namedSchemaSchema =
                                         Hs.mempty{HsJSONPB._schemaParamSchema =
                                                     Hs.mempty{HsJSONPB._paramSchemaType =
                                                                 Hs.Just HsJSONPB.SwaggerObject},
                                                   HsJSONPB._schemaProperties =
                                                     HsJSONPB.insOrdFromList
                                                       [("tx_id", keyModificationTxId),
                                                        ("value", keyModificationValue),
                                                        ("timestamp", keyModificationTimestamp),
                                                        ("is_delete", keyModificationIsDelete)]}})